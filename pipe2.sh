#!/bin/bash

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'
YELLOW='\033[1;33m'

print_header() {
    clear
    echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BLUE}‚ïë        HyperSpace Node Manager         ‚ïë${NC}"
    echo -e "${BLUE}‚ïë        Telegram: @nodetrip             ‚ïë${NC}"
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
}

create_key_file() {
    echo -e "${GREEN}–í—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞${NC}"
    echo -e "${BLUE}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫):${NC}"
    read -r private_key
    
    if [ -z "$private_key" ]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º${NC}"
        return 1
    fi
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á –≤ —Ñ–∞–π–ª
    echo "$private_key" > hyperspace.pem
    chmod 644 hyperspace.pem
    
    echo -e "${GREEN}‚úÖ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª hyperspace.pem${NC}"
    return 0
}

install_node() {
    echo -e "${GREEN}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...${NC}"
    sudo apt update && sudo apt upgrade -y
    cd $HOME
    rm -rf $HOME/.cache/hyperspace/models/*
    sleep 5

    echo -e "${GREEN}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ HyperSpace CLI...${NC}"
    while true; do
        curl -s https://download.hyper.space/api/install | bash | tee /root/hyperspace_install.log

        if ! grep -q "Failed to parse version from release data." /root/hyperspace_install.log; then
            echo -e "${GREEN}‚úÖ HyperSpace CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
            break
        else
            echo -e "${RED}‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...${NC}"
            sleep 5
        fi
    done

    echo -e "${GREEN}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ AIOS...${NC}"
    echo 'export PATH=$PATH:$HOME/.aios' >> ~/.bashrc
    export PATH=$PATH:$HOME/.aios
    source ~/.bashrc

    screen -S hyperspace -dm
    screen -S hyperspace -p 0 -X stuff $'aios-cli start\n'
    sleep 5

    echo -e "${GREEN}–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞...${NC}"
    echo -e "${YELLOW}–û—Ç–∫—Ä–æ–µ—Ç—Å—è —Ä–µ–¥–∞–∫—Ç–æ—Ä nano. –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª (CTRL+X, Y, Enter)${NC}"
    sleep 2
    nano hyperspace.pem

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –∫–ª—é—á–∞
    if [ -f "$HOME/hyperspace.pem" ]; then
        echo -e "${GREEN}–°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –∫–ª—é—á–∞...${NC}"
        cp $HOME/hyperspace.pem $HOME/hyperspace.pem.backup
        chmod 644 $HOME/hyperspace.pem.backup
    fi

    aios-cli hive import-keys ./hyperspace.pem

    echo -e "${GREEN}üîë –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...${NC}"
    aios-cli hive login
    sleep 5

    echo -e "${GREEN}–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏...${NC}"
    aios-cli models add hf:second-state/Qwen1.5-1.8B-Chat-GGUF:Qwen1.5-1.8B-Chat-Q4_K_M.gguf

    echo -e "${GREEN}–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–µ...${NC}"
    aios-cli hive connect
    aios-cli hive select-tier 3

    echo -e "${GREEN}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –Ω–æ–¥—ã...${NC}"
    aios-cli status

    echo -e "${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
}

check_logs() {
    echo -e "${GREEN}–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–æ–¥—ã:${NC}"
    screen -r hyperspace
}

check_points() {
    echo -e "${GREEN}–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–π–Ω—Ç–æ–≤:${NC}"
    export PATH=$PATH:$HOME/.aios
    
    if ! pgrep -f "aios-cli" > /dev/null; then
        echo -e "${YELLOW}–î–µ–º–æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º...${NC}"
        aios-cli start &
        sleep 5
    fi
    
    aios-cli hive points
}

check_status() {
    echo -e "${GREEN}–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –Ω–æ–¥—ã:${NC}"
    export PATH=$PATH:$HOME/.aios
    
    if ! pgrep -f "aios-cli" > /dev/null; then
        echo -e "${YELLOW}–î–µ–º–æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º...${NC}"
        aios-cli start &
        sleep 5
    fi
    
    aios-cli status
}

remove_node() {
    echo -e "${RED}–£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã...${NC}"
    screen -X -S hyperspace quit
    rm -rf $HOME/.aios
    rm -rf $HOME/.cache/hyperspace
    rm -f hyperspace.pem
    echo -e "${GREEN}–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞${NC}"
}

restart_node() {
    echo -e "${YELLOW}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥—ã...${NC}"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –¥–µ–º–æ–Ω–∞
    echo -e "${BLUE}–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –æ—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã...${NC}"
    lsof -i :50051 | grep LISTEN | awk '{print $2}' | xargs -r kill -9
    rm -rf /tmp/aios*
    rm -rf $HOME/.aios/daemon*
    screen -X -S hyperspace quit
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–ª—é—á–∞
    if [ ! -f "$HOME/hyperspace.pem" ] && [ -f "$HOME/hyperspace.pem.backup" ]; then
        echo -e "${YELLOW}–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...${NC}"
        cp $HOME/hyperspace.pem.backup $HOME/hyperspace.pem
        chmod 644 $HOME/hyperspace.pem
    fi
    
    # –°–æ–∑–¥–∞—ë–º screen —Å–µ—Å—Å–∏—é –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã
    echo -e "${BLUE}–°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é screen...${NC}"
    screen -S hyperspace -dm
    screen -S hyperspace -p 0 -X stuff $'export PATH=$PATH:$HOME/.aios\naios-cli start\n'
    sleep 5
    
    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Hive
    echo -e "${BLUE}–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Hive...${NC}"
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –∫–ª—é—á–∞
    export PATH=$PATH:$HOME/.aios
    if [ -f "$HOME/hyperspace.pem" ]; then
        echo -e "${GREEN}–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª—é—á...${NC}"
        aios-cli hive import-keys ./hyperspace.pem
    else
        echo -e "${RED}–§–∞–π–ª –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.${NC}"
        echo -e "${YELLOW}–¢—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á.${NC}"
        echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫):${NC}"
        read -r private_key
        echo "$private_key" > hyperspace.pem
        chmod 644 hyperspace.pem
        cp $HOME/hyperspace.pem $HOME/hyperspace.pem.backup
        chmod 644 $HOME/hyperspace.pem.backup
        aios-cli hive import-keys ./hyperspace.pem
    fi
    
    echo -e "${BLUE}–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É Hive...${NC}"
    aios-cli hive login
    sleep 5
    
    echo -e "${BLUE}–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Hive...${NC}"
    aios-cli hive connect
    sleep 5
    
    # –í—ã–±–∏—Ä–∞–µ–º —Ç–∏—Ä
    echo -e "${BLUE}–í—ã–±–∏—Ä–∞–µ–º —Ç–∏—Ä...${NC}"
    aios-cli hive select-tier 3
    sleep 3
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    echo -e "${GREEN}–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –Ω–æ–¥—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞:${NC}"
    aios-cli status
    
    echo -e "${GREEN}‚úÖ –ù–æ–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!${NC}"
}

setup_restart_cron() {
    echo -e "${YELLOW}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ cron
    if ! command -v crontab &> /dev/null; then
        echo -e "${RED}crontab –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...${NC}"
        apt-get update && apt-get install -y cron
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ cron
    if ! systemctl is-active --quiet cron; then
        echo -e "${YELLOW}Cron –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º...${NC}"
        systemctl start cron
        systemctl enable cron
    fi
    
    echo -e "${GREEN}–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞:${NC}"
    echo "1) –ö–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤"
    echo "2) –ö–∞–∂–¥—ã–µ 24 —á–∞—Å–∞ (—Ä–∞–∑ –≤ —Å—É—Ç–∫–∏)"
    echo "3) –î—Ä—É–≥–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª (–≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é)"
    echo "4) –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
    echo "5) –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    
    read -p "–í–∞—à –≤—ã–±–æ—Ä: " cron_choice
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    RESTART_CMD="lsof -i :50051 | grep LISTEN | awk '{print \$2}' | xargs -r kill -9 && rm -rf /tmp/aios* && rm -rf \$HOME/.aios/daemon* && screen -X -S hyperspace quit && sleep 5 && (if [ ! -f \"\$HOME/hyperspace.pem\" ] && [ -f \"\$HOME/hyperspace.pem.backup\" ]; then cp \$HOME/hyperspace.pem.backup \$HOME/hyperspace.pem; fi) && screen -S hyperspace -dm && screen -S hyperspace -p 0 -X stuff 'export PATH=\$PATH:\$HOME/.aios\naios-cli start\n' && sleep 5 && export PATH=\$PATH:\$HOME/.aios && aios-cli hive import-keys ./hyperspace.pem && aios-cli hive login && sleep 5 && aios-cli hive connect && sleep 5 && aios-cli status"
    SCRIPT_PATH="$HOME/hyperspace_restart.sh"
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    echo "#!/bin/bash" > $SCRIPT_PATH
    echo "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/.aios" >> $SCRIPT_PATH
    echo "cd $HOME" >> $SCRIPT_PATH
    echo "$RESTART_CMD" >> $SCRIPT_PATH
    chmod +x $SCRIPT_PATH
    
    case $cron_choice in
        1)
            # –ö–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤ (–≤ 00:00 –∏ 12:00)
            CRON_EXPRESSION="0 0,12 * * *"
            ;;
        2)
            # –ö–∞–∂–¥—ã–µ 24 —á–∞—Å–∞ (–≤ 00:00)
            CRON_EXPRESSION="0 0 * * *"
            ;;
        3)
            # –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ cron-–≤—ã—Ä–∞–∂–µ–Ω–∏—è
            echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ cron-–≤—ã—Ä–∞–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '0 */6 * * *' –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤):${NC}"
            read -r CRON_EXPRESSION
            ;;
        4)
            # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞–Ω–∏—è cron –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
            crontab -l | grep -v "hyperspace_restart.sh" | crontab -
            echo -e "${GREEN}–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –æ—Ç–∫–ª—é—á–µ–Ω.${NC}"
            return
            ;;
        5)
            # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            echo -e "${YELLOW}–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞...${NC}"
            return
            ;;
        *)
            echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (12 —á–∞—Å–æ–≤).${NC}"
            CRON_EXPRESSION="0 0,12 * * *"
            ;;
    esac
    
    # –û–±–Ω–æ–≤–ª—è–µ–º crontab
    (crontab -l 2>/dev/null | grep -v "hyperspace_restart.sh" ; echo "$CRON_EXPRESSION $SCRIPT_PATH > $HOME/hyperspace_restart.log 2>&1") | crontab -
    
    echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!${NC}"
    echo -e "${YELLOW}–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: $CRON_EXPRESSION${NC}"
    echo -e "${YELLOW}–°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: $SCRIPT_PATH${NC}"
    echo -e "${YELLOW}–õ–æ–≥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: $HOME/hyperspace_restart.log${NC}"
}

smart_monitor() {
    echo -e "${GREEN}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–º–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–æ–¥—ã...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    cat > $HOME/points_monitor_hyperspace.sh << 'EOL'
#!/bin/bash
LOG_FILE="$HOME/smart_monitor.log"
SCREEN_NAME="hyperspace"
LAST_POINTS="0"

# –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π PATH
export PATH="$PATH:$HOME/.aios"

log_message() {
    echo "$(date): $1" >> $LOG_FILE
}

restart_node() {
    log_message "–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ–¥—É—Ä—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã..."
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞, —á—Ç–æ –∏ –ø—Ä–∏ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ
    lsof -i :50051 | grep LISTEN | awk '{print $2}' | xargs -r kill -9
    rm -rf /tmp/aios*
    rm -rf $HOME/.aios/daemon*
    screen -X -S hyperspace quit
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª—é—á –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if [ ! -f "$HOME/hyperspace.pem" ] && [ -f "$HOME/hyperspace.pem.backup" ]; then
        cp $HOME/hyperspace.pem.backup $HOME/hyperspace.pem
    fi
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É
    screen -S hyperspace -dm
    screen -S hyperspace -p 0 -X stuff "export PATH=$PATH:$HOME/.aios\naios-cli start\n"
    sleep 5
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª—é—á–∏ –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
    export PATH=$PATH:$HOME/.aios
    aios-cli hive import-keys ./hyperspace.pem
    aios-cli hive login
    sleep 5
    aios-cli hive connect
    sleep 5
    aios-cli status
    
    log_message "–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    sleep 30
}

check_node_health() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å aios
    if ! pgrep -f "aios" > /dev/null; then
        log_message "–ü—Ä–æ—Ü–µ—Å—Å aios –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç 50051
    if ! lsof -i :50051 | grep LISTEN > /dev/null; then
        log_message "–ü–æ—Ä—Ç 50051 –Ω–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å aios-cli
    if ! command -v aios-cli &> /dev/null; then
        log_message "aios-cli –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH"
        return 1
    fi
    
    return 0
}

while true; do
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –Ω–æ–¥—ã
    if ! check_node_health; then
        restart_node
        LAST_POINTS="0"
        sleep 300  # –ñ–¥–µ–º 5 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
        continue
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–∏–Ω—Ç—ã
    CURRENT_POINTS=$($HOME/.aios/aios-cli hive points 2>/dev/null | grep "Points:" | awk '{print $2}')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∏–ª–∏ –ª–∏ –º—ã –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–∏–Ω—Ç–æ–≤
    if [ -z "$CURRENT_POINTS" ]; then
        log_message "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–∏–Ω—Ç–æ–≤, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Ç–µ—Ä–∞—Ü–∏—é"
        sleep 300
        continue
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –ø–æ–∏–Ω—Ç—ã
    if [ "$CURRENT_POINTS" = "$LAST_POINTS" ] || { [ "$CURRENT_POINTS" != "NaN" ] && [ "$LAST_POINTS" != "NaN" ] && [ "$CURRENT_POINTS" -eq "$LAST_POINTS" ]; }; then
        log_message "–ü–æ–∏–Ω—Ç—ã –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å (–¢–µ–∫—É—â–∏–µ: $CURRENT_POINTS, –ü—Ä–µ–¥—ã–¥—É—â–∏–µ: $LAST_POINTS). –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
        restart_node
    else
        log_message "–ü–æ–∏–Ω—Ç—ã –æ–±–Ω–æ–≤–∏–ª–∏—Å—å (–¢–µ–∫—É—â–∏–µ: $CURRENT_POINTS, –ü—Ä–µ–¥—ã–¥—É—â–∏–µ: $LAST_POINTS)"
    fi
    
    LAST_POINTS="$CURRENT_POINTS"
    sleep 3600  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–π —á–∞—Å
done
EOL

    chmod +x $HOME/points_monitor_hyperspace.sh
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞, –µ—Å–ª–∏ –µ—Å—Ç—å
    PIDS=$(ps aux | grep "[p]oints_monitor_hyperspace.sh" | awk '{print $2}')
    for PID in $PIDS; do
        kill -9 $PID
        echo -e "${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –ø—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å PID $PID${NC}"
    done
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    nohup $HOME/points_monitor_hyperspace.sh > $HOME/points_monitor_hyperspace.log 2>&1 &
    
    echo -e "${GREEN}‚úÖ –£–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!${NC}"
    echo -e "${YELLOW}–õ–æ–≥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $HOME/smart_monitor.log${NC}"
    echo -e "${YELLOW}–õ–æ–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞: $HOME/points_monitor_hyperspace.log${NC}"
}

stop_monitor() {
    echo -e "${YELLOW}–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...${NC}"
    
    PIDS=$(ps aux | grep "[p]oints_monitor_hyperspace.sh" | awk '{print $2}')
    if [ -z "$PIDS" ]; then
        echo -e "${RED}–ü—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        return
    fi
    
    for PID in $PIDS; do
        kill -9 $PID
        echo -e "${GREEN}–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å PID $PID${NC}"
    done
    
    echo -e "${GREEN}‚úÖ –£–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
}

disable_cron_restart() {
    echo -e "${YELLOW}–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é...${NC}"
    
    # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞–Ω–∏—è cron –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    crontab -l | grep -v "hyperspace_restart.sh" | crontab -
    
    # –£–¥–∞–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ -f "$HOME/hyperspace_restart.sh" ]; then
        rm -f "$HOME/hyperspace_restart.sh"
        echo -e "${GREEN}–°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —É–¥–∞–ª–µ–Ω${NC}"
    fi
    
    echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –æ—Ç–∫–ª—é—á–µ–Ω${NC}"
}

check_monitor_status() {
    echo -e "${GREEN}–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–º–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    MONITOR_PID=$(ps aux | grep "[p]oints_monitor_hyperspace.sh" | awk '{print $2}')
    if [ -z "$MONITOR_PID" ]; then
        echo -e "${RED}‚ùå –ü—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    else
        echo -e "${GREEN}‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∞–∫—Ç–∏–≤–µ–Ω (PID: $MONITOR_PID)${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑–º–µ—Ä –ª–æ–≥-—Ñ–∞–π–ª–∞
    if [ -f "$HOME/smart_monitor.log" ]; then
        LAST_LOGS=$(tail -n 10 $HOME/smart_monitor.log)
        LAST_CHECK=$(echo "$LAST_LOGS" | grep "$(date +%Y-%m-%d)" | tail -n 1)
        
        echo -e "\n${YELLOW}–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥–µ:${NC}"
        echo "$LAST_LOGS"
        
        if [ ! -z "$LAST_CHECK" ]; then
            echo -e "\n${GREEN}‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ –≤–µ–¥–µ—Ç –ª–æ–≥–∏${NC}"
        else
            echo -e "\n${RED}‚ùå –ù–µ—Ç —Å–≤–µ–∂–∏—Ö –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è${NC}"
        fi
    else
        echo -e "${RED}‚ùå –õ–æ–≥-—Ñ–∞–π–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–æ–¥—ã
    echo -e "\n${YELLOW}–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –Ω–æ–¥—ã:${NC}"
    if pgrep -f "aios" > /dev/null; then
        echo -e "${GREEN}‚úÖ –ü—Ä–æ—Ü–µ—Å—Å aios –∑–∞–ø—É—â–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –ü—Ä–æ—Ü–µ—Å—Å aios –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    fi
    
    if lsof -i :50051 | grep LISTEN > /dev/null; then
        echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç 50051 –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è${NC}"
    else
        echo -e "${RED}‚ùå –ü–æ—Ä—Ç 50051 –Ω–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—è –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É
    POINTS_OUTPUT=$($HOME/.aios/aios-cli hive points 2>/dev/null)
    if [ ! -z "$POINTS_OUTPUT" ]; then
        CURRENT_POINTS=$(echo "$POINTS_OUTPUT" | grep "Points:" | awk '{print $2}')
        MULTIPLIER=$(echo "$POINTS_OUTPUT" | grep "Multiplier:" | awk '{print $2}')
        TIER=$(echo "$POINTS_OUTPUT" | grep "Tier:" | awk '{print $2}')
        UPTIME=$(echo "$POINTS_OUTPUT" | grep "Uptime:" | awk '{print $2}')
        ALLOCATION=$(echo "$POINTS_OUTPUT" | grep "Allocation:" | awk '{print $2}')
        
        echo -e "${GREEN}‚úÖ –¢–µ–∫—É—â–∏–µ –ø–æ–∏–Ω—Ç—ã: $CURRENT_POINTS${NC}"
        echo -e "${GREEN}‚úÖ –ú–Ω–æ–∂–∏—Ç–µ–ª—å: $MULTIPLIER${NC}"
        echo -e "${GREEN}‚úÖ –¢–∏—Ä: $TIER${NC}"
        echo -e "${GREEN}‚úÖ –ê–ø—Ç–∞–π–º: $UPTIME${NC}"
        echo -e "${GREEN}‚úÖ –ê–ª–ª–æ–∫–∞—Ü–∏—è: $ALLOCATION${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–∏–Ω—Ç–æ–≤${NC}"
    fi
}

while true; do
    print_header
    echo -e "${GREEN}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo "1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "2) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏"
    echo "3) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–π–Ω—Ç—ã"
    echo "4) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "5) –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
    echo "6) –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É"
    echo "7) –í–∫–ª—é—á–∏—Ç—å —É–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    echo "8) –í—ã–∫–ª—é—á–∏—Ç—å —É–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    echo "9) –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é"
    echo "10) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo "0) –í—ã—Ö–æ–¥"
    
    read -p "–í–∞—à –≤—ã–±–æ—Ä: " choice

    case $choice in
        1) install_node ;;
        2) check_logs ;;
        3) check_points ;;
        4) check_status ;;
        5) remove_node ;;
        6) restart_node ;;
        7) smart_monitor ;;
        8) stop_monitor ;;
        9) disable_cron_restart ;;
        10) check_monitor_status ;;
        0) exit 0 ;;
        *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${NC}" ;;
    esac

    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
done
